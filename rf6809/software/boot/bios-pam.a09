; ============================================================================
;        __
;   \\__/ o\    (C) 2020-2022  Robert Finch, Waterloo
;    \  __ /    All rights reserved.
;     \/_//     robfinch<remove>@finitron.ca
;       ||
;  
;
; BSD 3-Clause License
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
; 1. Redistributions of source code must retain the above copyright notice, this
;    list of conditions and the following disclaimer.
;
; 2. Redistributions in binary form must reproduce the above copyright notice,
;    this list of conditions and the following disclaimer in the documentation
;    and/or other materials provided with the distribution.
;
; 3. Neither the name of the copyright holder nor the names of its
;    contributors may be used to endorse or promote products derived from
;    this software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;
; ============================================================================

;OPT include "d:\cores2022\rf6809\software\fmtk\config.a09"
include "d:\cores2022\rf6809\software\boot\bios-const.a09"

; The share count is the number of times a page has been shared.
PAMLastAllocate		EQU		$FFFFFC020

;------------------------------------------------------------------------------
; PAM
; 0 = unallocated
; 1 = allocated
;------------------------------------------------------------------------------


;------------------------------------------------------------------------------
; Find a page and mark it allocated. Proceeds starting at the previous byte
; where there was an allocation. This should help reduce the search time to
; find a freepage.
;
; Parameters:
; Returns:
;   d = page number, -1 if insufficient memory
;   N flag set if insufficient memory
;------------------------------------------------------------------------------

PAMAlloc:
	pshs	y
	ldx		PAMLastAllocate
	ldy		#MEMSZ							; number of bytes to look at
0002:
	ldb		PAMShareCounts,x
	bne		0001f								; page empty?
	; Found an empty
	tfr		x,d
	bsr		PAMShare
	stx		PAMLastAllocate
	tfr		x,d
	puls	y
	rts
0001:
	dey
	beq		PAMAllocOutOfMem
	inx												; advance to next word
	cmpx	#MEMSZ
	blo		0002b
	ldx		#0
	bra		0002b
PAMAllocOutOfMem:
	puls	y
	ldd		#-1
	ldx		#E_NoMem
	rts

;------------------------------------------------------------------------------
; Free memory previously allocated with PAMAlloc.
;
; Parameters:
;		d = page number to free
; Modifies:
;		none
;------------------------------------------------------------------------------

PAMFree:
	cmpd		#MEMSZ-STACK_PAGES	; last page is permanently allocated to system stack
	bhs			pump1
	cmpd		#NUM_PERM_PAGES_LO	; first 768 pages (6MB) allocated permanently to system
	blo			pump1
	tfr			d,x
	tst			PAMShareCounts,x	; memory already free?
	beq			pump1
	dec			PAMShareCounts,x	; decrease share count
pump1:
	rts

;------------------------------------------------------------------------------
; Share a page of memory. A page cannot be shared more than 4095 times.
;------------------------------------------------------------------------------

PAMShare:
	cmpd		#MEMSZ
	bhs			0001f
	pshs		x
	tfr			d,x
	inc			PAMShareCounts,x
	bne			0001f
	dec			PAMShareCounts,x
	puls		x
0001:
	rts

;------------------------------------------------------------------------------
;------------------------------------------------------------------------------

PAMInit:
  ; First zero out the entire PAM using word stores
  clrd
  tfr		d,x
PAMInit0002:
  std   ,x++
  cmpx	#MEMSZ							; 65536 bytes
  blo		PAMInit0002

  ; Now preallocate memory pages
  ; The first 2MB is allocated to the OS
  ; The next 4MB is allocated for the bitmapped display
  ldd   #NUM_PERM_PAGES_LO-1	; 768 pages
  std		PAMLastAllocate	; begin search after OS pages
  ldx		#0
  ldd		#$001001
PAMInit0001:
	std		,x++
	cmpx	#NUM_PERM_PAGES_LO
  blo		PAMInit0001
IFD &CMODA709
	stb		MEMSZ-1
ELSE
  ; The last 8 pages (64kB) of memory are reserved for OS stacks
  std		MEMSZ-2
  std		MEMSZ-4
  std		MEMSZ-6
  std		MEMSZ-8
ENDIF
	rts
